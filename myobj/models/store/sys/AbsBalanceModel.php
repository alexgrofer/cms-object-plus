<?php

/**
 * Остатки товара на складах или в магазинах
 * Class AbsBalanceModel
 */
abstract class AbsBalanceModel extends AbsBaseModel
{
	/**
	 * Идентификатор товара
	 * @var
	 */
	public $goods_id;

	/**
	 * Колличество остатка товара
	 * колличество номеров класса single, или колличество билетов в партере концертного зала
	 * @var
	 */
	public $count;

	/**
	 * Цена, использовать колонку если не используем в реляции таблицу с ценами по идентификатору
	 * @var
	 */
	//public $price;

	/**
	 * Возможны дополнительные параметры для упрощения поиска по остаткам:
	 *
	 * идентификатор может быть номером места в кинотеатре или самолете, типом номера в отеле, или типом зоны на стадионе или концертном зале
	 * datetime отправления поезда или дата заезда или время на которое есть в кинотеате места
	 * колличество дней проживания в отеле
	 *
	 * например в таблице продуктов лежит билет на фильм 'прометей' а в таблице остатков лежит именно место в кинотеатре в доп параметром намером зала
	 */

	/**
	 * id склада (например у сети есть несколько складов(магазинов или точек вывоза)) дату отгрузки товара уже можно смотреть в настройках склада
	 * если это агрегатор нужно посмотреть в настройках склада какому магазину он пренадлежит
	 * @var
	 */
	public $store_id;

	abstract protected function getNameModelGoods();

	public function relations() {
		return array(
			'goods'=>array(self::BELONGS_TO, $this->getNameModelGoods(), 'goods_id'),

			//таблица цен этого товара по всем идентификоторам (например городам) можно не использовать а использовать цену фиксированную в остатке
			//'price'=>array(self::BELONGS_TO, $this->getNameModelPrice(), 'goods_id'),
			//'prices'=>array(self::BELONGS_TO, $this->getNameModelPrice(), 'goods_id'),
		);
	}
}
